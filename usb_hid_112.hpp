#ifndef usb_hid_112_h
#define usb_hid_112_h

enum usbKeyModifier {
  none 		= 0x00
, leftCtrl 	= 0x01
, leftShift 	= 0x02
, leftAlt	= 0x04
, leftGUI 	= 0x08
, rightCtrl 	= 0x10
, rightShift 	= 0x20
, rightAlt	= 0x40
, rightGUI 	= 0x80
};

enum usbKeyboard {
  Reserved0 = 0x00
, ErrorRollOver = 0x01
, POSTFail = 0x02
, ErrUndefined = 0x03
, A = 0x04
, B = 0x05
, C = 0x06
, D = 0x07
, E = 0x08
, F = 0x09
, G = 0x0A
, H = 0x0B
, I = 0x0C
, J = 0x0D
, K = 0x0E
, L = 0x0F
, M = 0x10
, N = 0x11
, O = 0x12
, P = 0x13
, Q = 0x14
, R = 0x15
, S = 0x16
, T = 0x17
, U = 0x18
, V = 0x19
, W = 0x1A
, X = 0x1B
, Y = 0x1C
, Z = 0x1D
, One_Bang = 0x1E
, Two_At = 0x1F
, Three_Hash = 0x20
, Four_Dollar = 0x21
, Five_Perc = 0x22
, Six_Caret = 0x23
, Seven_And = 0x24
, Eight_Asrisk = 0x25
, Nine_OpenParen = 0x26
, Zero_CloseParen = 0x27
, Return = 0x28
, Escape = 0x29
, Delete_Backspace = 0x2A
, Tab = 0x2B
, Spacebar = 0x2C
, Minus_Underscore = 0x2D
, Equal_Plus = 0x2E
, BraceOpenSq_Curl = 0x2F
, BraceCloseSq_Curl = 0x30
, BackSlash_Pipe = 0x31
, Pound_Tilde = 0x32
, ColonSemi_Full = 0x33
, QuoteSingle_Double = 0x34
, Acent_Tilde = 0x35
, Comma_Less = 0x36
, Period_Greater = 0x37
, FwdSlash_Question = 0x38
, CapsLock = 0x39
, F1 = 0x3A
, F2 = 0x3B
, F3 = 0x3C
, F4 = 0x3D
, F5 = 0x3E
, F6 = 0x3F
, F7 = 0x40
, F8 = 0x41
, F9 = 0x42
, F10 = 0x43
, F11 = 0x44
, F12 = 0x45
, PrintScreen = 0x46
, ScrollLock = 0x47
, Pause = 0x48
, Insert = 0x49
, Home = 0x4A
, PgUp = 0x4B
, DeleteFwd = 0x4C
, End = 0x4D
, PgDn = 0x4E
, RightArrow = 0x4F
, LeftArrow = 0x50
, DownArrow = 0x51
, UpArrow = 0x52
, NumLock = 0x53
, KP_SlashFwd = 0x54
, KP_Mult = 0x55
, KP_Minus = 0x56
, KP_Plus = 0x57
, KP_Enter = 0x58
, KP_1_End = 0x59
, KP_2_Down = 0x5A
, KP_3_PgDwn = 0x5B
, KP_4_Left = 0x5C
, KP_5 = 0x5D
, KP_6_Right = 0x5E
, KP_7_Home = 0x5F
, KP_8_Up = 0x60
, KP_9_PgUp = 0x61
, KP_0_Ins = 0x62
, KP_Dot_Del = 0x63
, IntBackSlash_Pipe = 0x64
, Application = 0x65
, Power = 0x66
, KP_Equal = 0x67
, F13 = 0x68
, F14 = 0x69
, F15 = 0x6A
, F16 = 0x6B
, F17 = 0x6C
, F18 = 0x6D
, F19 = 0x6E
, F20 = 0x6F
, F21 = 0x70
, F22 = 0x71
, F23 = 0x72
, F24 = 0x73
, Execute = 0x74
, Help = 0x75
, Menu = 0x76
, Select = 0x77
, Stop = 0x78
, Again = 0x79
, Undo = 0x7A
, Cut = 0x7B
, Copy = 0x7C
, Paste = 0x7D
, Find = 0x7E
, Mute = 0x7F
, VolUp = 0x80
, VolDown = 0x81
, LockingCapsLk = 0x82
, LockingShiftLk = 0x83
, LockingScrollLk = 0x84
, KP_Comma = 0x85
, KP_EqualAlt = 0x86
, International1 = 0x87
, International2 = 0x88
, International3 = 0x89
, International4 = 0x8A
, International5 = 0x8B
, International6 = 0x8C
, International7 = 0x8D
, International8 = 0x8E
, International9 = 0x8F
, Lang1 = 0x90
, Lang2 = 0x91
, Lang3 = 0x92
, Lang4 = 0x93
, Lang5 = 0x94
, Lang6 = 0x95
, Lang7 = 0x96
, Lang8 = 0x97
, Lang9 = 0x98
, AltErase = 0x99
, SysReq_Attn = 0x9A
, Cancel = 0x9B
, Clear = 0x9C
, Prior = 0x9D
, ReturnAlt = 0x9E
, Separator = 0x9F
, Out = 0xA0
, Oper = 0xA1
, Clear_Again = 0xA2
, CrSel_Props = 0xA3
, ExSel = 0xA4
, Reserved1 = 0xA5
, Reserved2 = 0xA6
, Reserved3 = 0xA7
, Reserved4 = 0xA8
, Reserved5 = 0xA9
, Reserved6 = 0xAA
, Reserved7 = 0xAB
, Reserved8 = 0xAC
, Reserved9 = 0xAD
, Reserved10 = 0xAE
, Reserved11 = 0xAF
, KP_TwoZeros = 0xB0
, KP_ThreeZeros = 0xB1
, SepThousands = 0xB2
, SepDecimal = 0xB3
, CurrencyUnit = 0xB4
, CurrencySubUnit = 0xB5
, KP_BktOpen = 0xB6
, KP_BktClose = 0xB7
, KP_ParenOpen = 0xB8
, KP_ParenClose = 0xB9
, KP_Tab = 0xBA
, KP_Backspace = 0xBB
, KP_A = 0xBC
, KP_B = 0xBD
, KP_C = 0xBE
, KP_D = 0xBF
, KP_E = 0xC0
, KP_F = 0xC1
, KP_XOR = 0xC2
, KP_Exponent = 0xC3
, KP_Percent = 0xC4
, KP_LessThan = 0xC5
, KP_GreaterThan = 0xC6
, KP_AndSingle = 0xC7
, KP_AndDouble = 0xC8
, KP_PipeSingle = 0xC9
, KP_PipeDouble = 0xCA
, KP_Colon = 0xCB
, KP_Number = 0xCC
, KP_Space = 0xCD
, KP_At = 0xCE
, KP_Bang = 0xCF
, KP_MemoryStore = 0xD0
, KP_MemoryRecall = 0xD1
, KP_MemoryClear = 0xD2
, KP_MemoryAdd = 0xD3
, KP_MemorySub = 0xD4
, KP_MemoryMul = 0xD5
, KP_MemoryDiv = 0xD6
, KP_Plus_Minus = 0xD7
, KP_Clear = 0xD8
, KP_ClearEntry = 0xD9
, KP_Binary = 0xDA
, KP_Octal = 0xDB
, KP_Dec = 0xDC
, KP_Hex = 0xDD
, Reserved12 = 0xDE
, Reserved13 = 0xDF
, ModLeftCTRL = 0xE0
, ModLeftShift = 0xE1
, ModLeftAlt = 0xE2
, ModLeftGUI = 0xE3
, ModRightCTRL = 0xE4
, ModRightShift = 0xE5
, ModRightAlt = 0xE6
, ModRightGUI = 0xE7
};

typedef struct {
  int mod;
  enum usbKeyboard key;
} usbKey;

#define compare_usbKey(l,r) ( (l.mod == r.mod) && (l.key == r.key) )

#endif
